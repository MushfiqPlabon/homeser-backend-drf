# Generated by Django 5.0 on 2025-09-26 03:26

import caching.base
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import services.models
import utils.validation_utils


class Migration(migrations.Migration):
    dependencies = [
        ("services", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BasicService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("name", models.CharField(db_index=True, max_length=200)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic Service"),
                            ("premium", "Premium Service"),
                            ("specialized", "Specialized Service"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                (
                    "short_desc",
                    models.CharField(
                        db_index=True,
                        max_length=300,
                        validators=[services.models.validate_base_service_short_desc],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        validators=[services.models.validate_base_service_description],
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        max_digits=10,
                        validators=[utils.validation_utils.validate_positive_price],
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "db_table": "services_basicservice",
            },
            bases=(caching.base.CachingMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PremiumService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("name", models.CharField(db_index=True, max_length=200)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic Service"),
                            ("premium", "Premium Service"),
                            ("specialized", "Specialized Service"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                (
                    "short_desc",
                    models.CharField(
                        db_index=True,
                        max_length=300,
                        validators=[services.models.validate_base_service_short_desc],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        validators=[services.models.validate_base_service_description],
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        max_digits=10,
                        validators=[utils.validation_utils.validate_positive_price],
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("priority_support", models.BooleanField(default=False)),
                ("extended_warranty_months", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "services_premiumservice",
            },
            bases=(caching.base.CachingMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SpecializedService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("name", models.CharField(db_index=True, max_length=200)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic Service"),
                            ("premium", "Premium Service"),
                            ("specialized", "Specialized Service"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                (
                    "short_desc",
                    models.CharField(
                        db_index=True,
                        max_length=300,
                        validators=[services.models.validate_base_service_short_desc],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        validators=[services.models.validate_base_service_description],
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        max_digits=10,
                        validators=[utils.validation_utils.validate_positive_price],
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "complexity_factor",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=3),
                ),
                (
                    "required_equipment_cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
            ],
            options={
                "db_table": "services_specializedservice",
            },
            bases=(caching.base.CachingMixin, models.Model),
        ),
        migrations.AlterField(
            model_name="review",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="description",
            field=models.TextField(
                validators=[services.models.validate_service_description],
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="price",
            field=models.DecimalField(
                db_index=True,
                decimal_places=2,
                max_digits=10,
                validators=[utils.validation_utils.validate_positive_price],
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="short_desc",
            field=models.CharField(
                db_index=True,
                max_length=300,
                validators=[services.models.validate_service_short_desc],
            ),
        ),
        migrations.AlterField(
            model_name="servicecategory",
            name="name",
            field=models.CharField(db_index=True, max_length=200),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["name", "category"],
                name="services_se_name_77ac23_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["is_active", "created_at"],
                name="services_se_is_acti_8d5be5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["price", "category", "is_active"],
                name="services_se_price_f1a9b3_idx",
            ),
        ),
        migrations.AddField(
            model_name="basicservice",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_services",
                to="services.servicecategory",
            ),
        ),
        migrations.AddField(
            model_name="premiumservice",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_services",
                to="services.servicecategory",
            ),
        ),
        migrations.AddField(
            model_name="specializedservice",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_services",
                to="services.servicecategory",
            ),
        ),
    ]
